<UserControl x:Class="Deepglint.DeepglintAlpha.BaseView.MapControlView.MapControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              mc:Ignorable="d" >
    <Grid x:Name="grid" Background="#F7F7F7">

        <Grid.Resources>
            <Style
                TargetType="Border">
                <Setter
                    Property="BorderBrush"
                    Value="#D1D5DA"></Setter>
                <Setter
                    Property="BorderThickness"
                    Value="1"></Setter>
            </Style>

            <Style TargetType="{x:Type Image}" x:Key="MoveStyle">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Source" Value="/Assets/Move(active).png"></Setter>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Source" Value="/Assets/Move(active).png"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Image}" x:Key="ZoomStyle">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Source" Value="/Assets/Zooming.png"></Setter>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Source" Value="/Assets/Zooming(active).png"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Image}" x:Key="WallStyle">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Source" Value="/Assets/Wall(active).png"></Setter>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Source" Value="/Assets/Wall(active).png"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Image}" x:Key="PathStyle">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Source" Value="/Assets/Path(active).png"></Setter>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Source" Value="/Assets/Path(active).png"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Image}" x:Key="RoomStyle">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Source" Value="/Assets/Room(active).png"></Setter>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Source" Value="/Assets/Room(active).png"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Image}" x:Key="ShopStyle">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Source" Value="/Assets/Shop.png"></Setter>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Source" Value="/Assets/Shop(active).png"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Image}" x:Key="SensorStyle">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Source" Value="/Assets/Sensor(active).png"></Setter>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Source" Value="/Assets/Sensor(active).png"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Image}" x:Key="HotspotStyle">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Source" Value="/Assets/Hotspot.png"></Setter>
                        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
                        <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor"></Setter>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Source" Value="/Assets/Hotspot(active).png"></Setter>
                        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
                        <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <SolidColorBrush x:Key="SolidBorderBrush" Color="#888"/>


            <ControlTemplate x:Key="ComboBoxTextStyle" TargetType="{x:Type TextBox}">
                <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
            </ControlTemplate>


            <ControlTemplate x:Key="ComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal"/>
                            <VisualState x:Name="MouseOver"/>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>

                    <Border
						x:Name="Border" 
						Grid.ColumnSpan="2"
						CornerRadius="0"
						BorderThickness="2"
						BorderBrush="#F7F7F7"
						FocusVisualStyle="{x:Null}" Background="#0000FF00" />
                    <Border 
                        x:Name="Border2"
						Grid.Column="0"
						CornerRadius="0,0,0,0" 
						Margin="1" 
						BorderThickness="1" BorderBrush="#F7F7F7"/>
                    <Image
						x:Name="Arrow"
						Grid.Column="1"
                        SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="NearestNeighbor"
						HorizontalAlignment="Center"
						VerticalAlignment="Center" />
                </Grid>

                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Source" TargetName="Arrow" Value="/Assets/Group-Combo.png"></Setter>
                    </Trigger>
                    <Trigger Property="ToggleButton.IsMouseOver" Value="True">
                        <Setter Property="Source" TargetName="Arrow" Value="/Assets/Group-Combo(active).png" />
                    </Trigger>
                    <Trigger Property="ToggleButton.IsMouseOver" Value="False">
                        <Setter Property="Source" TargetName="Arrow" Value="/Assets/Group-Combo.png" />
                    </Trigger>
                </ControlTemplate.Triggers>

            </ControlTemplate>

            <ControlTemplate x:Key="ComboBoxToggleButtonStyleSensor" TargetType="{x:Type ToggleButton}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Border
						x:Name="Border" 
						Grid.ColumnSpan="2"
						CornerRadius="0"
						BorderThickness="2"
						BorderBrush="#F7F7F7"
						FocusVisualStyle="{x:Null}" Background="#0000FF00" />
                    <Border 
                        x:Name="Border2"
						Grid.Column="0"
						CornerRadius="0,0,0,0" 
						Margin="1" 
						BorderThickness="1" BorderBrush="#F7F7F7"/>
                    <Image
						x:Name="Arrow"
						Grid.Column="1"
                        SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="NearestNeighbor"
						HorizontalAlignment="Center"
						VerticalAlignment="Center" />
                </Grid>

                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Source" TargetName="Arrow" Value="/Assets/Sensor-Combo.png"></Setter>
                    </Trigger>
                    <Trigger Property="ToggleButton.IsMouseOver" Value="True">
                        <Setter Property="Source" TargetName="Arrow" Value="/Assets/Sensor-Combo(active).png" />
                    </Trigger>
                    <Trigger Property="ToggleButton.IsMouseOver" Value="False">
                        <Setter Property="Source" TargetName="Arrow" Value="/Assets/Sensor-Combo.png" />
                    </Trigger>
                </ControlTemplate.Triggers>

            </ControlTemplate>

            <ControlTemplate x:Key="ComboBoxToggleButtonStyleHotspot" TargetType="{x:Type ToggleButton}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Border
						x:Name="Border" 
						Grid.ColumnSpan="2"
						CornerRadius="0"
						BorderThickness="2"
						BorderBrush="#F7F7F7"
						FocusVisualStyle="{x:Null}" Background="#0000FF00" />
                    <Border 
                        x:Name="Border2"
						Grid.Column="0"
						CornerRadius="0,0,0,0" 
						Margin="1" 
						BorderThickness="1" BorderBrush="#F7F7F7"/>
                    <Image
						x:Name="Arrow"
						Grid.Column="1"
                        SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="NearestNeighbor"
						HorizontalAlignment="Center"
						VerticalAlignment="Center">
                    </Image>

                </Grid>

                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Source" TargetName="Arrow" Value="/Assets/Hotspot-Combo.png"></Setter>
                    </Trigger>
                    <Trigger Property="ToggleButton.IsMouseOver" Value="True">
                        <Setter Property="Source" TargetName="Arrow" Value="/Assets/Hotspot-Combo(active).png" />
                    </Trigger>
                    <Trigger Property="ToggleButton.IsMouseOver" Value="False">
                        <Setter Property="Source" TargetName="Arrow" Value="/Assets/Hotspot-Combo.png" />
                    </Trigger>
                </ControlTemplate.Triggers>

            </ControlTemplate>

            <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="MinWidth" Value="20"/>
                <Setter Property="MinHeight" Value="20"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <ToggleButton 
									x:Name="ToggleButton" 
									Template="{StaticResource ComboBoxToggleButtonStyle}" 
									Grid.Column="2" 
									Focusable="false"
									IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
									ClickMode="Press"/>
                                <Popup 
									x:Name="Popup"
									Placement="Bottom"
									IsOpen="{TemplateBinding IsDropDownOpen}"
									AllowsTransparency="True" 
									Focusable="False"
									PopupAnimation="Slide">
                                    <Grid 
										x:Name="DropDown"
										SnapsToDevicePixels="True"                
										MinWidth="{TemplateBinding ActualWidth}"
										MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border 
											x:Name="DropDownBorder"
											BorderThickness="1"
											BorderBrush="#D1D5DA" Background="#F7F7F7"/>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ComboBoxStyleSensor" TargetType="{x:Type ComboBox}">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="MinWidth" Value="20"/>
                <Setter Property="MinHeight" Value="20"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <ToggleButton 
									x:Name="ToggleButton" 
									Template="{StaticResource ComboBoxToggleButtonStyleSensor}" 
									Grid.Column="2" 
									Focusable="false"
									IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
									ClickMode="Press"/>
                                <Popup 
									x:Name="Popup"
									Placement="Bottom"
									IsOpen="{TemplateBinding IsDropDownOpen}"
									AllowsTransparency="True" 
									Focusable="False"
									PopupAnimation="Slide">
                                    <Grid 
										x:Name="DropDown"
										SnapsToDevicePixels="True"                
										MinWidth="{TemplateBinding ActualWidth}"
										MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border 
											x:Name="DropDownBorder"
											BorderThickness="1"
											BorderBrush="#D1D5DA" Background="#F7F7F7"/>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ComboBoxStyleHotspot" TargetType="{x:Type ComboBox}">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="MinWidth" Value="32"/>
                <Setter Property="MinHeight" Value="24"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <ToggleButton 
									x:Name="ToggleButton" 
									Template="{StaticResource ComboBoxToggleButtonStyleHotspot}" 
									Grid.Column="2" 
									Focusable="false"
									IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
									ClickMode="Press"/>
                                <Popup 
									x:Name="Popup"
									Placement="Bottom"
									IsOpen="{TemplateBinding IsDropDownOpen}"
									AllowsTransparency="True" 
									Focusable="False"
									PopupAnimation="Slide">
                                    <Grid 
										x:Name="DropDown"
										SnapsToDevicePixels="True"                
										MinWidth="{TemplateBinding ActualWidth}"
										MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border 
											x:Name="DropDownBorder"
											BorderThickness="1"
											BorderBrush="#D1D5DA" Background="#F7F7F7"/>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Test_TextBox" TargetType="{x:Type TextBox}">

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border" Width="Auto" Height="Auto" BorderThickness="1">
                                <Grid x:Name="grid" Background="#F7F7F7">
                                    <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </Grid.Resources>


        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="62"></ColumnDefinition>
            <ColumnDefinition Width="153"></ColumnDefinition>
            <ColumnDefinition Width="96"></ColumnDefinition>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Grid x:Name="gridOperation" Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5"></ColumnDefinition>
                <ColumnDefinition Width="24" />
                <ColumnDefinition Width="24" />
                <ColumnDefinition Width="9"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Image x:Name="imageMove" Style="{StaticResource MoveStyle}" RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" MouseLeftButtonDown="imageMove_MouseLeftButtonDown" MouseEnter="imageMove_MouseEnter" MouseLeave="imageMove_MouseLeave"/>
            <Image x:Name="imageZoom" Style="{StaticResource ZoomStyle}" RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" MouseEnter="imageZoom_MouseEnter" MouseLeave="imageZoom_MouseLeave" MouseLeftButtonDown="imageZoom_MouseLeftButtonDown" />
            <Image Grid.Column="3" Source="/Assets/SplitLine.png" SnapsToDevicePixels="True" HorizontalAlignment="Center" VerticalAlignment="Center" ></Image>
        </Grid>

        <Grid x:Name="gridLayers" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition Width="9"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <!--RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" Grid.Column="0"-->
            <Image x:Name="imageWall" Style="{StaticResource WallStyle}" RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center"  MouseEnter="imageWall_MouseEnter" MouseLeave="imageWall_MouseLeave" MouseLeftButtonDown="imageWall_MouseLeftButtonDown"/>
            <Image x:Name="imagePath" Style="{StaticResource PathStyle}" RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" MouseEnter="imagePath_MouseEnter" MouseLeave="imagePath_MouseLeave" MouseLeftButtonDown="imagePath_MouseLeftButtonDown"/>
            <Image x:Name="imageRoom" Style="{StaticResource RoomStyle}" RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" MouseEnter="imageRoom_MouseEnter" MouseLeave="imageRoom_MouseLeave" MouseLeftButtonDown="imageRoom_MouseLeftButtonDown"/>
            <Image x:Name="imageShop" Style="{StaticResource ShopStyle}"  RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" MouseEnter="imageShop_MouseEnter" MouseLeave="imageShop_MouseLeave" MouseLeftButtonDown="imageShop_MouseLeftButtonDown"/>
            <Image x:Name="imageSensor" Style="{StaticResource SensorStyle}" RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" Grid.Column="4" HorizontalAlignment="Center" VerticalAlignment="Center" MouseEnter="imageSensor_MouseEnter" MouseLeave="imageSensor_MouseLeave" MouseLeftButtonDown="imageSensor_MouseLeftButtonDown"/>
            <Image x:Name="imageHotspot" Style="{StaticResource HotspotStyle}" RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" Grid.Column="5" HorizontalAlignment="Center" VerticalAlignment="Center" MouseEnter="imageHotspot_MouseEnter" MouseLeave="imageHotspot_MouseLeave" MouseLeftButtonDown="imageHotspot_MouseLeftButtonDown"/>
            <Image Grid.Column="6" Source="/Assets/SplitLine.png" RenderOptions.BitmapScalingMode="NearestNeighbor" SnapsToDevicePixels="True" HorizontalAlignment="Center" VerticalAlignment="Center" ></Image>
        </Grid>

        <Grid x:Name="gridVisual" Grid.Column="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>


            <ComboBox x:Name="comboGroup" Grid.Column="0" Style="{StaticResource ComboBoxStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" SelectionChanged="comboGroup_SelectionChanged" />
            <ComboBox x:Name="comboSensor" Grid.Column="1" Style="{StaticResource ComboBoxStyleSensor}" HorizontalAlignment="Center" VerticalAlignment="Center" SelectionChanged="comboSensor_SelectionChanged" />
            <ComboBox x:Name="comboHotspot" Grid.Column="2" Style="{StaticResource ComboBoxStyleHotspot}" HorizontalAlignment="Center" VerticalAlignment="Center" SelectionChanged="comboHotspot_SelectionChanged" />
        </Grid>

        <Grid x:Name="gridText" Grid.Column="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10"></ColumnDefinition>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBox x:Name="textbox" Style="{StaticResource Test_TextBox}" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" Foreground="#a0a1a8"  FontSize="12px" TextWrapping="Wrap" IsEnabled="False" FontFamily="Arial" TextAlignment="Justify" />
            <!--<Rectangle  Name="imageRect" Width="32" Height="24">
                <Rectangle.Fill>
                    <ImageBrush x:Name="brush" ImageSource="/Assets/Group-Combo.png">
                    </ImageBrush>
                </Rectangle.Fill>
            </Rectangle>-->
        </Grid>
        <Border Grid.ColumnSpan="4"/>
        <!--<Border Grid.Column="1"></Border>-->
    </Grid>
</UserControl>